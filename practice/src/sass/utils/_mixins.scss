// font-face
@mixin font-face($font-name, $path, $style: normal, $weight: normal) {
    @font-face {
      font-family: quote($font-name);
      font-style: $style;
      font-weight: $weight;
      src: url($path+".eot"); // IE9 compat
      src: url($path+".eot?#iefix") format("embedded-opentype"), // IE8 and below
           url($path+".woff2") format("woff2"), // except IE
           url($path+".woff") format("woff"), // standards
           url($path+".otf") format("otf"); // Android, iOS
        //    url($path+".ttf") format("truetype"), 
        //    url($path+".svg##{$font-name}") format("svg");
    }
}

// font-size
@mixin font-size($font-size, $line-height: normal) {
    font-size: $font-size * 1px;

    @if $line-height==normal {
      line-height: normal;
    } @else {
      line-height: $line-height / $font-size;
    }
}

// background Images
@mixin background($path, $repeat, $cover, $pos: ()) {
    background-image: url($path);
    background-repeat: $repeat;
    background-size: $cover;
    background-position: $pos;
}

// border
@mixin border-radius($radius) {
    border-radius: $radius;    
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    -o-border-radius: $radius;
}

// vendor prefix
/// @param {String} $property - 프리픽스가 붙지 않은 CSS 속성
/// @param {*} $value - 가공되지 않은 CSS 값
$prefixes: ('webkit', 'moz', 'ms', 'o'); // 프리픽스 리스트 변수
@mixin prefix($property, $value) {
    @each $prefix in $prefixes {
        -#{$prefix}-#{$property}: $value;
    }

    #{$property}: $value;
}

@mixin rotate($value) {
    @include prefix(transform, rotate($value));
}

@mixin translate($x, $y) {
    @include prefix(transform, translate($x, $y));
}

// X icon 
@mixin iconCancel($position: relative, $width: 2px, $height: 21px, $color: #333, $display: inline-block) {
    position: $position;
    width: $width;
    height: $height;
    background-color: $color;
    @include rotate(45deg);
    &::before {
        content: '';
        display: $display;
        width: $width;
        height: $height;
        background-color: $color;
        @include rotate(-90deg);
    }
}


// Media queries
$medium: 768;
$large: 1024;
$huge: 1280;

@mixin medium {
  @media screen and (min-width: $medium * 1px) {
    @content;
  }
}

@mixin large {
  @media screen and (min-width: $large * 1px) {
    @content;
  }
}

@mixin huge {
  @media screen and (min-width: $huge * 1px) {
    @content;
  }
}